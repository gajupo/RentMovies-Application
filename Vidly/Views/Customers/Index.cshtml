@model IEnumerable<Vidly.Models.Customer>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Customers</h1>
<table id="customers" class="table table-bordered table-hover">
    <thead>
    <tr>
        <th>Customer</th>
        <th>Membership Type</th>
        <th>Delete</th>
    </tr>
    </thead>
    <tbody>

    @* we don't need the foreach because we are retriving the data using the api and the datatable plugin*@
    @*@foreach (var customer in Model)
            {
                <tr>
                    <td>

                        @Html.ActionLink(@customer.Name, "Edit", "Customers", new {id = customer.Id}, null)
                    </td>
                    <td>@customer.MembershipType.Name</td>
                    <td>
                        <button data-customer-id="@customer.Id" class="btn-link js-delete">Delete</button>
                    </td>
                </tr>
            }*@

    </tbody>
</table>

@section scripts
{
    <script>
        $(document).ready(function () {

            var table = $("#customers").DataTable({
                ajax: {
                    url: "/api/customers/",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "name",
                        render: function(data, type, customer) {
                            return "<a href='/customers/edit/" + customer.id + "'>" + customer.name + "</a>";
                        }
                    },
                    {
                        data: "membershipType.name"
                    },
                    {
                        data: "id",
                        render: function(id) {
                            return "<button class='btn-link js-delete' data-customer-id=" + id + "> Delete</button>";
                        }
                    }
                ]

            });
            //optimize to have one event handler for all delete links in the table customer,
            //passing a filter in the method on as second parameter
            $("#customers").on("click",".js-delete", function () {
                var button = $(this);
                bootbox.confirm("Are you sure you want to delete this customer?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/customers/" + button.attr("data-customer-id"),
                            method: "DELETE",
                            success: function () {
                                //remove the tr from the internal data of datatable
                                table.row(button.parents("tr")).remove().draw();
                            }
                        });
                    }
                   
                });
            });
        });
    </script>
}


