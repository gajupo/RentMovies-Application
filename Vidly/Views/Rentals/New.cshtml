
@{
    ViewBag.Title = "New Rental Form";
}

<h2>New Rental Form</h2>
<form id="newRental">
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            @*The required attribute indicates to jqueryval plugin that this field is required*@
            <input id="customer" name="customer" data-rule-validCustomer="true" required type="text" value="" class="form-control" />
        </div>
        
    </div>
    <div class="form-group">
        <label>Movie</label>
        <div class="tt-container">
            @*The attribute name="movie" is required that custom validators work*@
            <input id="movie" name="movie" data-rule-atLeastOneMovie="true" type="text" value="" class="form-control" />
        </div>

    </div>
    <div class="row">
        <div class="col-md-4 col-sm-4">
            <ul id="movies" class="list-group"></ul>
        </div>
    </div>
    
    <button class="btn btn-primary">Submit</button>
</form>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            var vm = {};
            vm.movieIds = [];

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });
            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead(
                {
                    minLength: 3,
                    highlight: true
                },
                {
                        name: 'customers',
                        display: 'name',
                        source: customers
                }).on('typeahead:select', function (e, customer) {
                            //to store the selected item
                            vm.customerId = customer.id;
                });

            $('#movie').typeahead(
                {
                    minLength: 3,
                    highlight: true
                },
                {
                    name: 'movies',
                    display: 'name',
                    source: movies
                }).on('typeahead:select', function (e, movie) {
                    //append the item
                    $("#movies").append("<li class='list-group-item'>" + movie.name + "</li>");
                    //set to blank the movie text fiel value
                    $("#movie").typeahead("val", "");
                    //store the ids to send them later to the model
                    vm.movieIds.push(movie.id);

                });

            //custom validator, to valid the object vm.customerId has a value and it has to be greater that 0
            $.validator.addMethod("validCustomer", function() {
                return vm.customerId && vm.customerId !== 0;
            }, "Please select a valid customer.");

            $.validator.addMethod("atLeastOneMovie", function () {
                return vm.movieIds.length > 0;
            }, "Please select at least one movie.");

            /*
            Callback for handling the actual submit when the form is valid. Gets the form as the only argument. 
            Replaces the default submit. The right place to submit a form via Ajax after it is validated.
            */
            var validator = $("#newRental").validate({
                submitHandler: function () {

                    //Submits the form via Ajax when valid.
                    $.ajax({
                        url: "/api/newRentals",
                        method: "post",
                        data: vm

                    }).done(function () {
                        //using toastr Jquery Plugin to show notifications
                        toastr.success("Rentasl successfully recorded.");
                        /*
                        * - Clear the form after the ajax submit
                        * - Clear vm object
                        */
                        $("#customer").typeahead("val", "");
                        $("#movie").typeahead("val", "");
                        $("#movies").empty();
                        vm = { movieIds: [] };
                        validator.resetForm();

                    }).fail(function () {
                        toastr.error("Something unexpected happened.");
                    });

                    return false;
                }
            });


        });
    </script>
    
}
